// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package wire

import (
	"github.com/ekbaya/asham/pkg/db/repository"
	"github.com/ekbaya/asham/pkg/domain/services"
	"gorm.io/gorm"
)

// Injectors from injector.go:

func InitializeServices(db *gorm.DB) (*services.ServiceContainer, error) {
	organizationRepository := repository.NewOrganizationRepository(db)
	organizationService := services.NewOrganizationService(organizationRepository)
	memberRepository := repository.NewMemberRepository(db)
	emailConfig := GetEmailConfigurations()
	emailService := services.NewEmailService(emailConfig)
	memberService := services.NewMemberService(memberRepository, emailService)
	projectRepository := repository.NewProjectRepository(db)
	projectService := services.NewProjectService(projectRepository)
	documentRepository := repository.NewDocumentRepository(db)
	documentService := services.NewDocumentService(documentRepository)
	proposalRepository := repository.NewProposalRepository(db)
	proposalService := services.NewProposalService(proposalRepository)
	acceptanceRepository := repository.NewAcceptanceRepository(db)
	acceptanceService := services.NewAcceptanceService(acceptanceRepository)
	commentRepository := repository.NewCommentRepository(db)
	commentService := services.NewCommentService(commentRepository)
	consultationRepository := repository.NewConsultationRepository(db)
	nationalConsultationService := services.NewNationalConsultationService(consultationRepository)
	ballotingRepository := repository.NewBallotingRepository(db)
	ballotingService := services.NewBallotingService(ballotingRepository)
	meetingRepository := repository.NewMeetingRepository(db)
	meetingService := services.NewMeetingService(meetingRepository)
	serviceContainer := services.NewServiceContainer(organizationService, memberService, projectService, documentService, proposalService, acceptanceService, commentService, emailService, nationalConsultationService, ballotingService, meetingService)
	return serviceContainer, nil
}
